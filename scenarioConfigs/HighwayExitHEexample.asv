function [scenario, egoVehicle, egoWaypoints, actorWaypoints, allStatus, roadConfigs] = HighwayExitHEexample()
% createDrivingScenario Returns the drivingScenario defined in the Designer

% Generated by MATLAB(R) 9.14 (R2023a) and Automated Driving Toolbox 3.7 (R2023a).
% Generated on: 25-Aug-2023 14:04:30
% func
% Construct a drivingScenario object.
scenario = drivingScenario("SampleTime",1.0, "StopTime",15.0);
actorWaypoints = cell(0);
allStatus = cell(0);  % 记录所有车的状态
roadConfigs = cell(0);  % ？
egoWaypoints = [-66.5 -15.1 deg2rad(21);   % 本车路径点
    -7 2.3 deg2rad(11.9419);
    
    11.8 4.1 deg2rad(-6.2613);
    30.8 -2.3 deg2rad(-25.2810);
    75.9 -26.5 deg2rad(-31.5683);
    99.8 -42 deg2rad(-33.6631)];
for i = length(egoWaypoints)
    hold on
    plot()
% Add all road segments
% 第一段是正常的路，第二段是高速出口
scenario = drivingScenario("SampleTime",1.0, "StopTime",15.0); % 创建出一个场景，采样间隔是1s,整个场景跑15s后就会停下来
roadCenters = [-85 -15.1 0;
    25.1 10.2 0;
    
    134.3 -12.9 0];% 定义构成道路的点
marking = [laneMarking('Solid', 'Color', [0.98 0.86 0.36])
    laneMarking('Dashed')
    laneMarking('DoubleSolid', 'Color', [0.93 0.96 0.3])
    laneMarking('Dashed')
    laneMarking('Solid')]; % 定义道路类型（比如是双实线、虚线等）

laneSpecification = lanespec(4,'Marking', marking);%  定义车道数
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road'); % 将车道添加到场景中
tempRoad = struct('roadCenters', roadCenters, 'marking', marking, ...
    'laneSpecification', laneSpecification);
roadConfigs{numel(roadConfigs) + 1} = tempRoad;

roadCenters = [14 7.3 0;
    29.2 0.4 0;
    63.5 -16.6 0;
    102.2 -40.7 0];
laneSpecification = lanespec(2);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road1');
tempRoad = struct('roadCenters', roadCenters, 'marking', marking, ...
    'laneSpecification', laneSpecification);
roadConfigs{numel(roadConfigs) + 1} = tempRoad;

% Add the ego vehicle
% mesh用于添加网格线
egoVehicle = vehicle(scenario, ...
    ...
    'ClassID', 1, ...
    'Position', [-66.5 -15.1 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car');

% Add the non-ego actors
% 每一辆车只给了初始位置和所有路径点
car1 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-53.1983566363428 -10.7180735877883 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car1');
waypoints = [-53.1983566363428 -10.7180735877883 0;
    -27.4 -2.7 0;
    3.2 4 0;
    14.4 4.3 0;
    53.1 -9.4 0;
    81.2 -24.7 0];
actorWaypoints{numel(actorWaypoints) + 1} = waypoints;
speed = [10;10;5;8;10;10];   % 车辆在每个waypoint开始时的速度
waittime = [0;0;0;0;0;0];
yaw = [NaN;NaN;NaN;NaN;NaN;NaN];   % 角度不用管？还是暂时未知一会算？
car1Status = struct('speed', speed, 'waittime', waittime, 'yaw', yaw);
allStatus{numel(allStatus) + 1} = car1Status;
trajectory(car1, waypoints, speed, waittime);

car2 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-70.6 -12 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car2');
waypoints = [-70.6 -12 0;
    -56.7 -7 0;
    -43.8 -3.8 0;
    -27.4 -2.1 0;
    -1 3.7 0;
    13.5 4.3 0;
    25.4 1.2 0;
    54.1 -14.5 0;
    87.9 -31.8 0];
actorWaypoints{numel(actorWaypoints) + 1} = waypoints;
speed = [10;10;10;10;4;6;8;10;10];
waittime = [0;0;0;0;0;0;0;0;0];
yaw = [NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN];
car2Status = struct('speed', speed, 'waittime', waittime, 'yaw', yaw);
allStatus{numel(allStatus) + 1} = car2Status;
trajectory(car2, waypoints, speed, waittime);

car3 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-57.0917222376115 -7.62791262348468 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car3');
waypoints = [-57.0917222376115 -7.62791262348468 0;
    -30.2 0.5 0;
    -8.7 4.7 0;
    12 7.8 0;
    38.7 7.8 0;
    102.5 -4.6 0];
actorWaypoints{numel(actorWaypoints) + 1} = waypoints;
speed = [10;10;10;10;10;10];
waittime = [0;0;0;0;0;0];
yaw = [NaN;NaN;NaN;NaN;NaN;NaN];
car3Status = struct('speed', speed, 'waittime', waittime, 'yaw', yaw);
allStatus{numel(allStatus) + 1} = car3Status;
trajectory(car3, waypoints, speed);

car4 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-80.1 -19.9 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car4');
waypoints = [-80.1 -19.9 0;
    -71 -16.2 0;
    -54.9 -7 0;
    -37 -1.6 0;
    -22.1 -0.4 0;
    12.9 4.7 0;
    46.4 -5.3 0;
    72.3 -18.5 0;
    97 -35 0];
actorWaypoints{numel(actorWaypoints) + 1} = waypoints;
speed = [8;8;8;8;8;5;5;8;8];
waittime = [0;0;0;0;0;0;0;0;0];
yaw =  [21;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN];
car4Status = struct('speed', speed, 'waittime', waittime, 'yaw', yaw);
allStatus{numel(allStatus) + 1} = car4Status;
trajectory(car4, waypoints, speed, 'Yaw', yaw);

